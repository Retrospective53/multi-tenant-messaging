// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tenant.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createTenant = `-- name: CreateTenant :one
INSERT INTO tenants (id, name)
VALUES ($1, $2)
RETURNING id, name, created_at
`

type CreateTenantParams struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

func (q *Queries) CreateTenant(ctx context.Context, arg CreateTenantParams) (Tenant, error) {
	row := q.db.QueryRowContext(ctx, createTenant, arg.ID, arg.Name)
	var i Tenant
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}

const getTenant = `-- name: GetTenant :one
SELECT id, name, created_at FROM tenants WHERE id = $1
`

func (q *Queries) GetTenant(ctx context.Context, id uuid.UUID) (Tenant, error) {
	row := q.db.QueryRowContext(ctx, getTenant, id)
	var i Tenant
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}
